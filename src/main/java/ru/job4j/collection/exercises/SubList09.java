package ru.job4j.collection.exercises;

import java.util.ArrayList;
import java.util.List;

/**
 * 0.9. Получить часть списка с определенными индексами
 * Может возникнуть ситуация, когда у нас есть список и нам нужно получить его часть,
 * которая находится между двумя интересующими нас индексами.
 * Что же делать в данной ситуации? Не отчаиваться, не усложнять, а просто применить метод subList():
 *
 * List<E> subList(int fromIndex, int toIndex) - метод возвращает список,
 * который содержит все элементы исходного списка начиная с индекса fromIndex(включительно) и
 * до toIndex(значение исключается).
 * При этом, если выполняется условие fromIndex == toIndex,- метод вернет пустой список.
 *
 * Задание: метод принимает два параметра - список и элемент, который предполагается,
 * что содержится в этом списке. Необходимо реализовать метод, чтобы он возвращал результаты следующим образом:
 *
 * 1. Элемента нет в списке - возвращает пустой список.
 *
 * 2. Элемент в списке встречается 1 раз - возвращает пустой список.
 *
 * 3. Элемент встречается более одного - возвращается список,
 * начиная с первого вхождения элемента и заканчивая предшествующим последнему вхождению элемента в исходной коллекции.
 */

public class SubList09 {
    public static List<String> getElementsBetweenIndexes(List<String> list, String el) {
        /* Здесь мы используем Collectins.emptyList без привязки к определенному листу, так как нам нужно вернуть */
        /*просто пустой лист*/
        /*return list.contains(el) ? list.subList(list.indexOf(el), list.lastIndexOf(el)) : Collections.emptyList();*/
        return list.contains(el) ? list.subList(list.indexOf(el), list.lastIndexOf(el)) : new ArrayList<>();
    }
}
